module delay #(
    parameter DELAY: u32  = 1           ,
    parameter WIDTH: u32  = 1           ,
    parameter TYPE : type = logic<WIDTH>,
) (
    i_clk  : input  logic,
    i_rst_n: input  logic,
    i_d    : input  TYPE ,
    o_d    : output TYPE ,
) {
    if (DELAY >= 1) :g_delay {
        var delay: TYPE [DELAY];

        assign o_d = delay[DELAY - 1];
        always_ff (i_clk, i_rst_n) {
            if_reset {
                delay = '0;
            } else {
                delay[0] = i_d;
                for i: u32 in 1..DELAY {
                    delay[i] = delay[i - 1];
                }
            }
        }
    } else :g_no_delay {
        assign o_d = i_d;
    }
}
